name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened]
  push:
    branches: [main]
  schedule:
    # additionally run once per week (At 00:00 on Sunday) to maintain cache
    - cron: '0 0 * * 0'

jobs:
  build:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.2"]
        ghc:
          - "8.8.4"
          - "8.10.4"
        exclude:
          - os: macOS-latest
            ghc: 8.8.4
          - os: windows-latest
            ghc: 8.8.4
    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v1.2.9
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v2.1.7
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build all

    - name: Test
      run: |
        cabal test stan-test

    - if: matrix.os == 'windows-latest'
      name: Dogfooding on Windows
      run: |
        cabal run stan -- --config-file=.stan-windows.toml

    - if: matrix.os != 'windows-latest'
      name: Dogfooding
      run: |
        cabal run stan

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.5"]
        ghc: ["8.10.3"]

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v1.2.9
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v2.1.7
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test --system-ghc

    - name: Dogfooding
      run: |
        stack run stan --system-ghc

  hlint:
    name: hlint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run HLint
      env:
         HLINT_VERSION: "3.2.7"
      run: |
        curl https://raw.githubusercontent.com/kowainik/relude/v1.0.0.1/.hlint.yaml -o .hlint-relude.yaml

        curl -L https://github.com/ndmitchell/hlint/releases/download/v${HLINT_VERSION}/hlint-${HLINT_VERSION}-x86_64-linux.tar.gz --output hlint.tar.gz
        tar -xvf hlint.tar.gz
        ./hlint-${HLINT_VERSION}/hlint src/ test/ -h .hlint-relude.yaml
